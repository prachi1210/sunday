<?xml version="1.0" encoding="UTF-8"?>

<aiml version="1.0">

<!-- Free software (c) 2001 ALICE AI Foundation -->
<!-- This program is open source code released under -->
<!-- the terms of the GNU General Public License -->
<!-- as published by the Free Software Foundation. -->

<meta name="author" content="Thomas Ringate"/>
<meta name="language" content="en"/>

<!-- 
This file contains test cases to verify the correct operations of the ALICEBOT.
It should be placed in the directory where all the standard bot AIML files are
located.  It expects to find and use some of the standard predicates, and CATEGORIES
found in the core AIML set.
Each test case is documented with what is expected to be the correct response.  They
should be written to be as self contained as possible.
 -->

<!-- Test case #1.

This testcase tests the bot's ability to immediatly set the value of "name"
using the <think> tag, and then use <get name="name"/> within the same category to
display the entered name.  It is complicated by using the <random> tag
to generate varied responses.

TESTER: testcase call me james.
(BOT replies with one of the following:)
BOT: OK. I'll call you james.
BOT: Hello james.
BOT: How are you james.

TESTER: testcase call me wally.
(BOT replies with one of the following:)
BOT: OK. I'll call you wally.
BOT: Hello wally.
BOT: How are you wally.
 -->

<category>
<pattern>TESTCASE CALL ME *</pattern>
<template>
<think><set name="name"><formal><star/></formal></set></think>
<random>
<li>OK. I'll call you</li>
<li>Hello</li>
<li>How are you</li>
</random><get name="name"/>
</template>
</category>


<!-- Test case #2.

This testcase tests the bot's ability to properly set the bot's last response
into the various THAT value holders.  It issues a multi sentence response, which
should result in the bot's last response being set to only the value of the
last sentence issues.

TESTER: testcase that
BOT: More than one.
Sentence.
That is an error.
TESTER: that
BOT: That is "That is an error:"
 -->

<category>
<pattern>TESTCASE THAT</pattern>
<template>
More than one. 
<br />Sentence. 
<br />That is an error.
</template>
</category>


<!-- Test case #3.

This testcase tests the bot's ability to properly set a predicate within a
<condition> tag using the <li> format for only the TRUE <li> element, using the
<think> tag and also not set other predicates which also have <think> tags
within the condition that are FALSE.

TESTER: testcase condition
BOT: Setting hair color.
haircolor is now set to = green.
eyecolor is now set to = test ok.
job is now set to = test ok.
TESTER: testcase condition1
BOT: Setting hair color.
haircolor is now set to = yellow.
eyecolor is now set to = test ok.
job is now set to = test ok.
 -->

<category>
<pattern>TESTCASE CONDITION</pattern>
<template>
<think><set name="match">test</set></think>
<think><set name="eyecolor">test ok</set></think>
<think><set name="job">test ok</set></think>
<condition>
<li name="match" value="test">Setting hair color.<think><set name="haircolor">green</set></think></li>
<li name="match" value="nomatch">Setting eye color.<think><set name="eyecolor">test failed</set></think></li>
<li name="match" value="nothing">Setting job.<think><set name="job">test failed</set></think></li>
</condition>
<br /> haircolor is now set to = <get name="haircolor"/>.
<br /> eyecolor is now set to = <get name="eyecolor"/>.
<br /> job is now set to = <get name="job"/>.
</template>
</category>

<category>
<pattern>TESTCASE CONDITION1</pattern>
<template>
<think><set name="match">test1</set></think>
<condition>
<li name="match" value="test1">Setting hair color.<think><set name="haircolor">yellow</set></think></li>
<li name="match" value="nomatch">Setting eye color.<think><set name="eyecolor">test failed</set></think></li>
<li name="match" value="nothing">Setting job.<think><set name="job">test failed</set></think></li>
</condition>
<br /> haircolor is now set to = <get name="haircolor"/>.
<br /> eyecolor is now set to = <get name="eyecolor"/>.
<br /> job is now set to = <get name="job"/>.
</template>
</category>


<!-- Test case #4.

This testcase tests the bot's ability to properly set the TOPIC in a CATEGORY
and then use that setting in a <condition> tag to craft a response within
the same CATEGORY that TOPIC was set in.

TESTER: testcase talk about cars.
BOT: cars is an interesting topic.
I know a little about vintage cars, sports cars, or race cars.
Which cars topic would you like to talk about?
The topic is now set to: cars.

TESTER: testcase talk about computers.
BOT: computers is an interesting topic.
I know about main frames and desk top PCs?
Which computers topic would you like to talk about?
The topic is now set to: computers.

TESTER: testcase talk about chairs.
BOT: chairs is an interesting topic.
I know about main frames and desk top PCs?
Which chairs topic would you like to talk about?
The topic is now set to: chairs.
 -->

<category>
<pattern>TESTCASE TALK ABOUT *</pattern>
<template>
<star/> is an interesting topic.<br />
<think><set name="topic"><star/></set></think>
<condition name="topic" value="cars">
I know a little about vintage cars, sports cars, or race cars.
</condition>
<condition name="topic" value="computers">
I know about main frames and desk top PCs?
</condition>
<condition name="topic" value="chairs">
I know about reclining chairs, and lounge chairs?
</condition>
<br />Which <star/> topic would you like to talk about?
<br />The topic is now set to: <get name="topic"/>.
</template>
</category>


<!-- Test case #5.

This testcase tests the bot's ability to properly set the GENDER of a
user based on their name.  It uses two variations of the <condition> tag.
The VALUE and the CONTAINS.

TESTER: my name is jon.  (set your name to either: jon, bob.)
BOT:
TESTER: testcase condition value
BOT: I am trying a condition test here.
Your name is Jon and you are a male.
Let me know if it works.

TESTER: my name is nancy.
BOT:
TESTER: testcase condition value
BOT: I am trying a condition test here.
Your name is Nancy and you are a female.
Let me know if it works.

TESTER: my name is jon.  (set your name to either: jon, bob.)
BOT:
TESTER: testcase condition contains
BOT: I am trying a condition test here.
Your name is Jon and you are a male.
Let me know if it works.

TESTER: my name is nancy.
BOT:
TESTER: testcase condition contains
BOT: I am trying a condition test here.
Your name is Nancy and you are a female.
Let me know if it works.
 -->

<category>
<pattern>TESTCASE CONDITION VALUE</pattern>
<template>
I am trying a condition test here.<br />
<condition>
<li name="name" value="jon"><think><set name="gender">male</set></think>Your name is Jon and you are a <get name="gender"/>.</li>
<li name="name" value="bob"><think><set name="gender">male</set></think>Your name is Bob and you are a <get name="gender"/>.</li>
<li name="name" value="nancy"><think><set name="gender">female</set></think>Your name is Nancy and you are a <get name="gender"/>.</li>
<li>I dont know what your name is.</li>
</condition>
<br />Let me know if it works.
</template>
</category>

<category>
<pattern>TESTCASE CONDITION CONTAINS</pattern>
<template>
I am trying a condition contains test here.<br />
<condition>
<li name="name" contains="jon"><think><set name="gender">male</set></think>Your name is Jon and you are a <get name="gender"/>.</li>
<li name="name" contains="bob"><think><set name="gender">male</set></think>Your name is Bob and you are a <get name="gender"/>.</li>
<li name="name" contains="nancy"><think><set name="gender">female</set></think>Your name is Nancy and you are a <get name="gender"/>.</li>
<li>I dont know what your name is.</li>
</condition>
<br />Let me know if it works.
</template>
</category>


<!-- Test case #6.

This testcase tests the bot's ability to properly use the
<condition name="xxx"> format of the CONDITION tag.  It tests that in the
list entries, only the TRUE element is returned.

TESTER: testcase condition 1
BOT: Test for no match found. None of the above were true.

TESTER: testcase condition 2
BOT: Test for match of xxx = test passed. The name=xxx was set to test passed.
 -->


<category>
<pattern>TESTCASE CONDITION 1</pattern>
<template>
Test for no match found.
<think><set name="xxx">failed</set></think>
<condition name="xxx">
<li value="yyy">The name=xxx was set to yyy, test failed.</li>
<li value="qqq">The name=xxx was set to qqq, test failed.</li>
<li value="rrr">The name=xxx was set to rrr, test failed.</li>
<li>None of the above were true.</li>
</condition>
</template>
</category>

<category>
<pattern>TESTCASE CONDITION 2</pattern>
<template>
Test for match of xxx = test passed.
<think><set name="xxx">test passed</set></think>
<condition name="xxx">
<li value="yyy">The name=xxx was set to yyy.</li>
<li value="test passed">The name=xxx was set to test passed.</li>
<li value="rrr">The name=xxx was set to rrr.</li>
<li>None of the above were true.</li>
</condition>
</template>
</category>


<!-- Test case #7.

This testcase tests the bot's ability to properly use the
<condition> tag to only return the first TRUE element. 

TESTER: testcase condition 3
BOT: Test where all elements are true, but only the first is returned. 
The name=xxx was set to test passed. First element.
 -->

<category>
<pattern>TESTCASE CONDITION 3</pattern>
<template>
Test where all elements are true, but only the first is returned.
<think><set name="xxx">test passed</set></think>
<think><set name="yyy">test passed</set></think>
<think><set name="zzz">test passed</set></think>
<condition>
<li name="xxx" value="test passed">The name=xxx was set to test passed. First element.</li>
<li name="yyy" value="test passed">test failed. Second element.</li>
<li name="zzz" value="test passed">test failed. Third element.</li>
<li>None of the above were true.</li>
</condition>
</template>
</category>


<!-- Test case #8.

This testcase tests the bot's ability to use the <sentence> tag, and the <formal> tag in 
multiple locations within the response.

TESTER: testcase multi formal
BOT: My favorite film is The Black Hole, because Ernest Borgnine is such a great actor.
 -->

<category>
<pattern>TESTCASE MULTI FORMAL</pattern>
<template>
<sentence>my favorite film is <formal>the black hole</formal>, because <formal>ernest
borgnine</formal> is such a great actor.</sentence>
</template>
</category>


<!-- Test case #9.

This testcase tests the bot's ability to adjust upper and lowercase letters
based on the tag used.

TESTER: testcase capital format
BOT: This is an UPPERCASE test.
This is a lowercase test. <br />
My name is Jon Baer and this is a formal test. <br />
This is a sentence test.
 -->

<category>
<pattern>TESTCASE CAPITAL FORMAT</pattern>
<template>
This is an <uppercase>uppercase</uppercase> test. <br />
This is a <lowercase>lOwErCaSe</lowercase> test. <br />
My name is <formal>jon baer</formal> and this is a formal test. <br />
<sentence>this is a sentence test.</sentence>
</template>
</category>


<!-- Test case #10.

This testcase tests the bot's ability to use the VALUE= and the CONTAIN=
in the <if> tag.

TESTER: testcase if contains
BOT: You have a name it is elmer fudd. The IF test passed.
TESTER: testcase if value
BOT: You have a name it is jim fudd. The IF test passed.
 -->

<category>
<pattern>TESTCASE IF CONTAINS</pattern>
<template>
<think><set name="name">Elmer Fudd</set></think>
<if name="name" contains="fudd">
You have a name it is <get name="name"/>. The IF test passed.
</if>
<if name="name" contains="fud ">
The IF test has failed.
</if>
</template>
</category>

<category>
<pattern>TESTCASE IF VALUE</pattern>
<template>
<think><set name="name">jim fudd</set></think>
<if name="name" value="jim fudd">
You have a name it is <get name="name"/>. The IF test passed.
</if>
<if name="name" value="jim fud ">
The IF test has failed.
</if>
</template>
</category>

<!-- Test case #11.

This testcase tests the bot's ability to have nested condition tag's

TESTER: testcase nested condition
BOT: You are Jon, don't know where you are from. Test passed.
TESTER: testcase nested condition1
BOT: You are Jon from Brooklyn. Test passed.
 -->


<category>
<pattern>TESTCASE NESTED CONDITION</pattern>
<template>
<think><set name="name">jon</set></think>
<think><set name="location">tampa</set></think>
<condition> 
 <li name="name" value="jon"> 
  <condition> 
    <li name="location" value="brooklyn">You are Jon from Brooklyn. Test failed.</li> 
    <li>You are Jon, don't know where you are from. Test passed.</li> 
  </condition></li> 
 <li>Test failed.</li> 
</condition> 
</template>
</category>

<category>
<pattern>TESTCASE NESTED CONDITION1</pattern>
<template>
<think><set name="name">jon</set></think>
<think><set name="location">brooklyn</set></think>
<condition> 
 <li name="name" value="jon"> 
  <condition> 
    <li name="location" value="brooklyn">You are Jon from Brooklyn. Test passed.</li> 
    <li>You are Jon, don't know where you are from. Test failed.</li> 
  </condition></li> 
 <li>Test failed.</li> 
</condition> 
</template>
</category>

<!-- Test case #12.
 
This testcase tests the bot's ability to have a condition tag within a set tag.
 
TESTER: testcase 12 one
BOT: The test passed.
TESTER: testcase 12 two
BOT: The test passed.
 -->

<category>
<pattern>TESTCASE 12 *</pattern>
<template>
<think>
<set name="testcase">failed</set>
<set name="xxx"><star/></set>
<set name="testcase">
<condition name="xxx">
<li value="one">passed</li>
<li value="two">passed</li>
<li>used the default</li>
</condition>
</set>
</think>
The test <get name="testcase"/>.
</template>
</category>


<!-- Test case #13.
 
This testcase tests the bot's ability to find a duplicated category with a THAT within a TOPIC section
 
TESTER: test topic
BOT: I am now going to test a bogus topic. You can answer anything you want.
TESTER: blab blab blab
BOT: The test of the bogus topic worked.
 -->

<category>
<pattern>TEST TOPIC</pattern>
<template>
<think><set name="topic">WXYZ</set></think>
I am now going to test a bogus topic. You can answer anything you want.
</template>
</category>

<topic name="WXYZ">
<category>
<pattern>*</pattern>
<that>YOU CAN ANSWER ANYTHING YOU WANT</that>
<template>
The test of the bogus topic worked.
</template>
</category>

</topic>

<!-- Test case #14.
 
This testcase tests the bot's ability to have HTML within a template.
 
TESTER: testcase html
BOT: <table><tr><td>Seems like there is some <b>HTML</b> going on in here.</td></tr></table>

From a browser you will not see the HTML tags.
 -->

<category>
<pattern>TESTCASE HTML</pattern>
<template>
<table><tr><td>Seems like there is some <b>HTML</b> going on in here.</td></tr></table>
</template>
</category>

<category>
<pattern>TEST THAT</pattern>
<template>
Client: <input index="2"/><br />
Robot:  <that index="2,1"/><br />
Client: <input index="1"/><br />
Robot: <that/><br />
Client: TEST THAT<br />
</template>
</category>




</aiml>
